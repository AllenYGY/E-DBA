"""update service table structure

Revision ID: b910ac4b9bd5
Revises: 7d448d75a6e1
Create Date: 2025-05-17 11:20:55.313848

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'b910ac4b9bd5'
down_revision: Union[str, None] = '7d448d75a6e1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 先删除外键约束
    op.drop_constraint('services_ibfk_3', 'services', type_='foreignkey')
    
    # 然后删除列
    op.drop_column('services', 'thesis_database_connection')
    op.drop_column('services', 'allow_download')
    op.drop_column('services', 'allow_preview')
    op.drop_column('services', 'external_api_config_id')
    op.drop_column('services', 'verification_rules')
    op.drop_column('services', 'download_fee')
    op.drop_column('services', 'verification_database_connection')
    op.drop_column('services', 'is_private_only')
    op.drop_column('services', 'verification_api')
    
    # 最后删除表
    op.drop_table('external_api_configs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('services', sa.Column('verification_api', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True))
    op.add_column('services', sa.Column('is_private_only', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.add_column('services', sa.Column('verification_database_connection', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True))
    op.add_column('services', sa.Column('download_fee', mysql.FLOAT(), nullable=True))
    op.add_column('services', sa.Column('verification_rules', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=True))
    op.add_column('services', sa.Column('external_api_config_id', mysql.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('services', sa.Column('allow_preview', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.add_column('services', sa.Column('allow_download', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.add_column('services', sa.Column('thesis_database_connection', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True))
    op.create_foreign_key('services_ibfk_3', 'services', 'external_api_configs', ['external_api_config_id'], ['id'])
    op.create_table('external_api_configs',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('base_url', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('path', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=False),
    sa.Column('method', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=10), nullable=False),
    sa.Column('input_format', mysql.JSON(), nullable=True),
    sa.Column('output_format', mysql.JSON(), nullable=True),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.Column('service_type', mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ###
